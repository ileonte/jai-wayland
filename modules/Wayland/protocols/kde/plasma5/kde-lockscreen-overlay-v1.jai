/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: kde_lockscreen_overlay_v1
 */

kde_lockscreen_overlay_v1_interface: wl_interface;
kde_lockscreen_overlay_v1 :: struct {
    #as _proxy: wl_proxy;
    _interface_ :: *kde_lockscreen_overlay_v1_interface;

    /* ENUM: kde_lockscreen_overlay_v1::error */
    error_invalid_surface_state : u32 : 0;

    set_user_data :: inline (self: *kde_lockscreen_overlay_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *kde_lockscreen_overlay_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *kde_lockscreen_overlay_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    allow :: inline (self: *kde_lockscreen_overlay_v1, surface: *wl_surface) #c_call {
        wl_proxy.marshal_flags(
            self, KDE_LOCKSCREEN_OVERLAY_V1_ALLOW,
            null, wl_proxy.get_version(self), 0,
            surface);
    }

    destroy :: inline (self: *kde_lockscreen_overlay_v1) #c_call {
        wl_proxy.marshal_flags(
            self, KDE_LOCKSCREEN_OVERLAY_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }
}

KDE_LOCKSCREEN_OVERLAY_V1_ALLOW         : u32 : 0;
KDE_LOCKSCREEN_OVERLAY_V1_DESTROY       : u32 : 1;
KDE_LOCKSCREEN_OVERLAY_V1_ALLOW_SINCE   : u32 : 1;
KDE_LOCKSCREEN_OVERLAY_V1_DESTROY_SINCE : u32 : 1;


#scope_module
kde_lockscreen_overlay_v1_protocol_init :: () {
    kde_lockscreen_overlay_v1_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: kde_lockscreen_overlay_v1::allow */
        *wl_surface_interface,   // 1
    ];

    kde_lockscreen_overlay_v1_requests[0] = .{"allow", "o", kde_lockscreen_overlay_v1_types_storage.data + 0};
    kde_lockscreen_overlay_v1_requests[1] = .{"destroy", "", kde_lockscreen_overlay_v1_types_storage.data + 0};
    kde_lockscreen_overlay_v1_interface = .{
        "kde_lockscreen_overlay_v1", 1,
        kde_lockscreen_overlay_v1_requests.count, kde_lockscreen_overlay_v1_requests.data,
        0, null,
    };
}


#scope_file
kde_lockscreen_overlay_v1_types_storage: []*wl_interface;

kde_lockscreen_overlay_v1_requests: [2]wl_message;

#assert size_of(kde_lockscreen_overlay_v1) == 0 "wayland-scanner bug: kde_lockscreen_overlay_v1 is non-empty";
