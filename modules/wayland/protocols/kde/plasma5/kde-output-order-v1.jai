/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: kde_output_order_v1
 */

kde_output_order_v1_interface: wl_interface;
kde_output_order_v1 :: struct {
    #as _proxy: wl_proxy;

    set_user_data :: inline (self: *kde_output_order_v1, user_data: *void) #c_call {
        wl_proxy.set_user_data(self, user_data);
    }

    get_user_data :: inline (self: *kde_output_order_v1) -> *void #c_call {
        return wl_proxy.get_user_data(self);
    }

    get_version :: inline (self: *kde_output_order_v1) -> u32 #c_call {
        return wl_proxy.get_version(self);
    }

    destroy :: inline (self: *kde_output_order_v1) #c_call {
        wl_proxy.marshal_flags(
            self, KDE_OUTPUT_ORDER_V1_DESTROY,
            null, wl_proxy.get_version(self), WL_MARSHAL_FLAG_DESTROY);
    }

    add_listener :: inline (self: *kde_output_order_v1, listener: *kde_output_order_v1_listener, data: *void) -> s32 #c_call {
        return wl_proxy.add_listener(self, cast(*generic_c_call) listener, data);
    }
}

KDE_OUTPUT_ORDER_V1_DESTROY       : u32 : 0;
KDE_OUTPUT_ORDER_V1_DESTROY_SINCE : u32 : 1;
KDE_OUTPUT_ORDER_V1_OUTPUT_SINCE  : u32 : 1;
KDE_OUTPUT_ORDER_V1_DONE_SINCE    : u32 : 1;

kde_output_order_v1_listener :: struct {
    output := _stubs_.output;
    done   := _stubs_.done;

    _stubs_ :: struct {
        output :: (data: *void,
            self: *kde_output_order_v1,
            output_name: *u8) -> void #c_call {}
        done :: (data: *void,
            self: *kde_output_order_v1) -> void #c_call {}
    }
}


#scope_module
kde_output_order_v1_protocol_init :: () {
    kde_output_order_v1_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* EVENT: kde_output_order_v1::output */
        null,  // 1
    ];

    kde_output_order_v1_requests[0] = .{"destroy", "", kde_output_order_v1_types_storage.data + 0};
    kde_output_order_v1_events[0] = .{"output", "s", kde_output_order_v1_types_storage.data + 0};
    kde_output_order_v1_events[1] = .{"done", "", kde_output_order_v1_types_storage.data + 0};
    kde_output_order_v1_interface = .{
        "kde_output_order_v1", 1,
        kde_output_order_v1_requests.count, kde_output_order_v1_requests.data,
        kde_output_order_v1_events.count, kde_output_order_v1_events.data,
    };
}


#scope_file
kde_output_order_v1_types_storage: []*wl_interface;

kde_output_order_v1_requests: [1]wl_message;
kde_output_order_v1_events  : [2]wl_message;
