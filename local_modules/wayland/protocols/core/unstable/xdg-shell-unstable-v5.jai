/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: xdg_shell_unstable_v5
 */

xdg_shell :: struct { #as _proxy: wl_proxy; }
xdg_shell_interface: wl_interface;

xdg_shell_version_constants :: enum {
    version_current :: 5;
}

xdg_shell_error_constants :: enum {
    error_role                  :: 0;
    error_defunct_surfaces      :: 1;
    error_not_the_topmost_popup :: 2;
    error_invalid_popup_parent  :: 3;
}

xdg_shell_set_user_data :: inline (self: *xdg_shell, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

xdg_shell_get_user_data :: inline (self: *xdg_shell) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

xdg_shell_get_version :: (self: *xdg_shell) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

xdg_shell_destroy_req :: inline (self: *xdg_shell) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SHELL_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

xdg_shell_use_unstable_version_req :: inline (self: *xdg_shell, version: s32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SHELL_USE_UNSTABLE_VERSION,
        null, wl_proxy_get_version(self), 0,
        version);
}

xdg_shell_get_xdg_surface_req :: inline (self: *xdg_shell, surface: *wl_surface) -> *xdg_surface #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, XDG_SHELL_GET_XDG_SURFACE,
        *xdg_surface_interface, wl_proxy_get_version(self), 0,
        null, surface);
    return cast(*xdg_surface) ret;
}

xdg_shell_get_xdg_popup_req :: inline (self: *xdg_shell, surface: *wl_surface, parent: *wl_surface, seat: *wl_seat, serial: u32, x: s32, y: s32) -> *xdg_popup #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, XDG_SHELL_GET_XDG_POPUP,
        *xdg_popup_interface, wl_proxy_get_version(self), 0,
        null, surface, parent, seat, serial, x, y);
    return cast(*xdg_popup) ret;
}

xdg_shell_pong_req :: inline (self: *xdg_shell, serial: u32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SHELL_PONG,
        null, wl_proxy_get_version(self), 0,
        serial);
}

xdg_shell_add_listener :: inline (self: *xdg_shell, listener: *xdg_shell_listener, data: *void) -> s32 #c_call {
    return wl_proxy_add_listener(self, cast(*generic_c_call) listener, data);
}

XDG_SHELL_DESTROY                    : u32 : 0;
XDG_SHELL_USE_UNSTABLE_VERSION       : u32 : 1;
XDG_SHELL_GET_XDG_SURFACE            : u32 : 2;
XDG_SHELL_GET_XDG_POPUP              : u32 : 3;
XDG_SHELL_PONG                       : u32 : 4;
XDG_SHELL_DESTROY_SINCE              : u32 : 1;
XDG_SHELL_USE_UNSTABLE_VERSION_SINCE : u32 : 1;
XDG_SHELL_GET_XDG_SURFACE_SINCE      : u32 : 1;
XDG_SHELL_GET_XDG_POPUP_SINCE        : u32 : 1;
XDG_SHELL_PONG_SINCE                 : u32 : 1;
XDG_SHELL_PING_SINCE                 : u32 : 1;

xdg_shell_listener :: struct {
    ping: #type (data: *void,
        self: *xdg_shell,
        serial: u32) -> void #c_call;
}

xdg_surface :: struct { #as _proxy: wl_proxy; }
xdg_surface_interface: wl_interface;

xdg_surface_resize_edge_constants :: enum {
    resize_edge_none         :: 0;
    resize_edge_top          :: 1;
    resize_edge_bottom       :: 2;
    resize_edge_left         :: 4;
    resize_edge_top_left     :: 5;
    resize_edge_bottom_left  :: 6;
    resize_edge_right        :: 8;
    resize_edge_top_right    :: 9;
    resize_edge_bottom_right :: 10;
}

xdg_surface_state_constants :: enum {
    state_maximized  :: 1;
    state_fullscreen :: 2;
    state_resizing   :: 3;
    state_activated  :: 4;
}

xdg_surface_set_user_data :: inline (self: *xdg_surface, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

xdg_surface_get_user_data :: inline (self: *xdg_surface) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

xdg_surface_get_version :: (self: *xdg_surface) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

xdg_surface_destroy_req :: inline (self: *xdg_surface) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

xdg_surface_set_parent_req :: inline (self: *xdg_surface, parent: *xdg_surface) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_PARENT,
        null, wl_proxy_get_version(self), 0,
        parent);
}

xdg_surface_set_title_req :: inline (self: *xdg_surface, title: *u8) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_TITLE,
        null, wl_proxy_get_version(self), 0,
        title);
}

xdg_surface_set_app_id_req :: inline (self: *xdg_surface, app_id: *u8) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_APP_ID,
        null, wl_proxy_get_version(self), 0,
        app_id);
}

xdg_surface_show_window_menu_req :: inline (self: *xdg_surface, seat: *wl_seat, serial: u32, x: s32, y: s32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SHOW_WINDOW_MENU,
        null, wl_proxy_get_version(self), 0,
        seat, serial, x, y);
}

xdg_surface_move_req :: inline (self: *xdg_surface, seat: *wl_seat, serial: u32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_MOVE,
        null, wl_proxy_get_version(self), 0,
        seat, serial);
}

xdg_surface_resize_req :: inline (self: *xdg_surface, seat: *wl_seat, serial: u32, edges: u32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_RESIZE,
        null, wl_proxy_get_version(self), 0,
        seat, serial, edges);
}

xdg_surface_ack_configure_req :: inline (self: *xdg_surface, serial: u32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_ACK_CONFIGURE,
        null, wl_proxy_get_version(self), 0,
        serial);
}

xdg_surface_set_window_geometry_req :: inline (self: *xdg_surface, x: s32, y: s32, width: s32, height: s32) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_WINDOW_GEOMETRY,
        null, wl_proxy_get_version(self), 0,
        x, y, width, height);
}

xdg_surface_set_maximized_req :: inline (self: *xdg_surface) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_MAXIMIZED,
        null, wl_proxy_get_version(self), 0);
}

xdg_surface_unset_maximized_req :: inline (self: *xdg_surface) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_UNSET_MAXIMIZED,
        null, wl_proxy_get_version(self), 0);
}

xdg_surface_set_fullscreen_req :: inline (self: *xdg_surface, output: *wl_output) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_FULLSCREEN,
        null, wl_proxy_get_version(self), 0,
        output);
}

xdg_surface_unset_fullscreen_req :: inline (self: *xdg_surface) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_UNSET_FULLSCREEN,
        null, wl_proxy_get_version(self), 0);
}

xdg_surface_set_minimized_req :: inline (self: *xdg_surface) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_SURFACE_SET_MINIMIZED,
        null, wl_proxy_get_version(self), 0);
}

xdg_surface_add_listener :: inline (self: *xdg_surface, listener: *xdg_surface_listener, data: *void) -> s32 #c_call {
    return wl_proxy_add_listener(self, cast(*generic_c_call) listener, data);
}

XDG_SURFACE_DESTROY                   : u32 : 0;
XDG_SURFACE_SET_PARENT                : u32 : 1;
XDG_SURFACE_SET_TITLE                 : u32 : 2;
XDG_SURFACE_SET_APP_ID                : u32 : 3;
XDG_SURFACE_SHOW_WINDOW_MENU          : u32 : 4;
XDG_SURFACE_MOVE                      : u32 : 5;
XDG_SURFACE_RESIZE                    : u32 : 6;
XDG_SURFACE_ACK_CONFIGURE             : u32 : 7;
XDG_SURFACE_SET_WINDOW_GEOMETRY       : u32 : 8;
XDG_SURFACE_SET_MAXIMIZED             : u32 : 9;
XDG_SURFACE_UNSET_MAXIMIZED           : u32 : 10;
XDG_SURFACE_SET_FULLSCREEN            : u32 : 11;
XDG_SURFACE_UNSET_FULLSCREEN          : u32 : 12;
XDG_SURFACE_SET_MINIMIZED             : u32 : 13;
XDG_SURFACE_DESTROY_SINCE             : u32 : 1;
XDG_SURFACE_SET_PARENT_SINCE          : u32 : 1;
XDG_SURFACE_SET_TITLE_SINCE           : u32 : 1;
XDG_SURFACE_SET_APP_ID_SINCE          : u32 : 1;
XDG_SURFACE_SHOW_WINDOW_MENU_SINCE    : u32 : 1;
XDG_SURFACE_MOVE_SINCE                : u32 : 1;
XDG_SURFACE_RESIZE_SINCE              : u32 : 1;
XDG_SURFACE_ACK_CONFIGURE_SINCE       : u32 : 1;
XDG_SURFACE_SET_WINDOW_GEOMETRY_SINCE : u32 : 1;
XDG_SURFACE_SET_MAXIMIZED_SINCE       : u32 : 1;
XDG_SURFACE_UNSET_MAXIMIZED_SINCE     : u32 : 1;
XDG_SURFACE_SET_FULLSCREEN_SINCE      : u32 : 1;
XDG_SURFACE_UNSET_FULLSCREEN_SINCE    : u32 : 1;
XDG_SURFACE_SET_MINIMIZED_SINCE       : u32 : 1;
XDG_SURFACE_CONFIGURE_SINCE           : u32 : 1;
XDG_SURFACE_CLOSE_SINCE               : u32 : 1;

xdg_surface_listener :: struct {
    configure: #type (data: *void,
        self: *xdg_surface,
        width: s32,
        height: s32,
        states: *wl_array,
        serial: u32) -> void #c_call;
    close: #type (data: *void,
        self: *xdg_surface) -> void #c_call;
}

xdg_popup :: struct { #as _proxy: wl_proxy; }
xdg_popup_interface: wl_interface;

xdg_popup_set_user_data :: inline (self: *xdg_popup, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

xdg_popup_get_user_data :: inline (self: *xdg_popup) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

xdg_popup_get_version :: (self: *xdg_popup) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

xdg_popup_destroy_req :: inline (self: *xdg_popup) #c_call {
    wl_proxy_marshal_flags(
        self, XDG_POPUP_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}
xdg_popup_add_listener :: inline (self: *xdg_popup, listener: *xdg_popup_listener, data: *void) -> s32 #c_call {
    return wl_proxy_add_listener(self, cast(*generic_c_call) listener, data);
}

XDG_POPUP_DESTROY          : u32 : 0;
XDG_POPUP_DESTROY_SINCE    : u32 : 1;
XDG_POPUP_POPUP_DONE_SINCE : u32 : 1;

xdg_popup_listener :: struct {
    popup_done: #type (data: *void,
        self: *xdg_popup) -> void #c_call;
}


#scope_module
xdg_shell_unstable_v5_protocol_init :: () {
    xdg_shell_unstable_v5_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: xdg_shell::use_unstable_version */
        null,  // 1
        /* REQUEST: xdg_shell::get_xdg_surface */
        *xdg_surface_interface,   // 2
        *wl_surface_interface,   // 3
        /* REQUEST: xdg_shell::get_xdg_popup */
        *xdg_popup_interface,   // 4
        *wl_surface_interface,   // 5
        *wl_surface_interface,   // 6
        *wl_seat_interface,   // 7
        null,  // 8
        null,  // 9
        null,  // 10
        /* REQUEST: xdg_shell::pong */
        null,  // 11
        /* EVENT: xdg_shell::ping */
        null,  // 12
        /* REQUEST: xdg_surface::set_parent */
        *xdg_surface_interface,   // 13
        /* REQUEST: xdg_surface::set_title */
        null,  // 14
        /* REQUEST: xdg_surface::set_app_id */
        null,  // 15
        /* REQUEST: xdg_surface::show_window_menu */
        *wl_seat_interface,   // 16
        null,  // 17
        null,  // 18
        null,  // 19
        /* REQUEST: xdg_surface::move */
        *wl_seat_interface,   // 20
        null,  // 21
        /* REQUEST: xdg_surface::resize */
        *wl_seat_interface,   // 22
        null,  // 23
        null,  // 24
        /* REQUEST: xdg_surface::ack_configure */
        null,  // 25
        /* REQUEST: xdg_surface::set_window_geometry */
        null,  // 26
        null,  // 27
        null,  // 28
        null,  // 29
        /* REQUEST: xdg_surface::set_fullscreen */
        *wl_output_interface,   // 30
        /* EVENT: xdg_surface::configure */
        null,  // 31
        null,  // 32
        null,  // 33
        null,  // 34
    ];

    xdg_shell_requests[0] = .{"destroy", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_shell_requests[1] = .{"use_unstable_version", "i", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_shell_requests[2] = .{"get_xdg_surface", "no", xdg_shell_unstable_v5_types_storage.data + 1};
    xdg_shell_requests[3] = .{"get_xdg_popup", "nooouii", xdg_shell_unstable_v5_types_storage.data + 2};
    xdg_shell_requests[4] = .{"pong", "u", xdg_shell_unstable_v5_types_storage.data + 4};
    xdg_shell_events[0] = .{"ping", "u", xdg_shell_unstable_v5_types_storage.data + 11};
    xdg_shell_interface = .{
        "xdg_shell", 1,
        xdg_shell_requests.count, xdg_shell_requests.data,
        xdg_shell_events.count, xdg_shell_events.data,
    };

    xdg_surface_requests[0] = .{"destroy", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_surface_requests[1] = .{"set_parent", "o", xdg_shell_unstable_v5_types_storage.data + 12};
    xdg_surface_requests[2] = .{"set_title", "s", xdg_shell_unstable_v5_types_storage.data + 13};
    xdg_surface_requests[3] = .{"set_app_id", "s", xdg_shell_unstable_v5_types_storage.data + 14};
    xdg_surface_requests[4] = .{"show_window_menu", "ouii", xdg_shell_unstable_v5_types_storage.data + 15};
    xdg_surface_requests[5] = .{"move", "ou", xdg_shell_unstable_v5_types_storage.data + 16};
    xdg_surface_requests[6] = .{"resize", "ouu", xdg_shell_unstable_v5_types_storage.data + 20};
    xdg_surface_requests[7] = .{"ack_configure", "u", xdg_shell_unstable_v5_types_storage.data + 22};
    xdg_surface_requests[8] = .{"set_window_geometry", "iiii", xdg_shell_unstable_v5_types_storage.data + 25};
    xdg_surface_requests[9] = .{"set_maximized", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_surface_requests[10] = .{"unset_maximized", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_surface_requests[11] = .{"set_fullscreen", "o", xdg_shell_unstable_v5_types_storage.data + 26};
    xdg_surface_requests[12] = .{"unset_fullscreen", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_surface_requests[13] = .{"set_minimized", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_surface_events[0] = .{"configure", "iiau", xdg_shell_unstable_v5_types_storage.data + 30};
    xdg_surface_events[1] = .{"close", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_surface_interface = .{
        "xdg_surface", 1,
        xdg_surface_requests.count, xdg_surface_requests.data,
        xdg_surface_events.count, xdg_surface_events.data,
    };

    xdg_popup_requests[0] = .{"destroy", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_popup_events[0] = .{"popup_done", "", xdg_shell_unstable_v5_types_storage.data + 0};
    xdg_popup_interface = .{
        "xdg_popup", 1,
        xdg_popup_requests.count, xdg_popup_requests.data,
        xdg_popup_events.count, xdg_popup_events.data,
    };
}

#scope_file
xdg_shell_unstable_v5_types_storage: []*wl_interface;

xdg_shell_requests: [5]wl_message;
xdg_shell_events  : [1]wl_message;

xdg_surface_requests: [14]wl_message;
xdg_surface_events  : [2]wl_message;

xdg_popup_requests: [1]wl_message;
xdg_popup_events  : [1]wl_message;
