/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: content_type_v1
 */

wp_content_type_manager_v1 :: struct { #as _proxy: wl_proxy; }
wp_content_type_manager_v1_interface: wl_interface;

wp_content_type_manager_v1_error_constants :: enum {
    error_already_constructed :: 0;
}

wp_content_type_manager_v1_set_user_data :: inline (self: *wp_content_type_manager_v1, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

wp_content_type_manager_v1_get_user_data :: inline (self: *wp_content_type_manager_v1) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

wp_content_type_manager_v1_get_version :: (self: *wp_content_type_manager_v1) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

wp_content_type_manager_v1_destroy_req :: inline (self: *wp_content_type_manager_v1) #c_call {
    wl_proxy_marshal_flags(
        self, WP_CONTENT_TYPE_MANAGER_V1_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

wp_content_type_manager_v1_get_surface_content_type_req :: inline (self: *wp_content_type_manager_v1, surface: *wl_surface) -> *wp_content_type_v1 #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, WP_CONTENT_TYPE_MANAGER_V1_GET_SURFACE_CONTENT_TYPE,
        *wp_content_type_v1_interface, wl_proxy_get_version(self), 0,
        null, surface);
    return cast(*wp_content_type_v1) ret;
}

wp_content_type_v1 :: struct { #as _proxy: wl_proxy; }
wp_content_type_v1_interface: wl_interface;

wp_content_type_v1_type_constants :: enum {
    type_none  :: 0;
    type_photo :: 1;
    type_video :: 2;
    type_game  :: 3;
}

wp_content_type_v1_set_user_data :: inline (self: *wp_content_type_v1, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

wp_content_type_v1_get_user_data :: inline (self: *wp_content_type_v1) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

wp_content_type_v1_get_version :: (self: *wp_content_type_v1) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

wp_content_type_v1_destroy_req :: inline (self: *wp_content_type_v1) #c_call {
    wl_proxy_marshal_flags(
        self, WP_CONTENT_TYPE_V1_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

wp_content_type_v1_set_content_type_req :: inline (self: *wp_content_type_v1, content_type: u32) #c_call {
    wl_proxy_marshal_flags(
        self, WP_CONTENT_TYPE_V1_SET_CONTENT_TYPE,
        null, wl_proxy_get_version(self), 0,
        content_type);
}

#scope_module
content_type_v1_protocol_init :: () {
    content_type_v1_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: wp_content_type_manager_v1::get_surface_content_type */
        *wp_content_type_v1_interface,   // 1
        *wl_surface_interface,   // 2
        /* REQUEST: wp_content_type_v1::set_content_type */
        null,  // 3
    ];

    wp_content_type_manager_v1_requests[0] = .{"destroy", "", content_type_v1_types_storage.data + 0};
    wp_content_type_manager_v1_requests[1] = .{"get_surface_content_type", "no", content_type_v1_types_storage.data + 0};
    wp_content_type_manager_v1_interface = .{
        "wp_content_type_manager_v1", 1,
        wp_content_type_manager_v1_requests.count, wp_content_type_manager_v1_requests.data,
        0, null,
    };

    wp_content_type_v1_requests[0] = .{"destroy", "", content_type_v1_types_storage.data + 0};
    wp_content_type_v1_requests[1] = .{"set_content_type", "u", content_type_v1_types_storage.data + 1};
    wp_content_type_v1_interface = .{
        "wp_content_type_v1", 1,
        wp_content_type_v1_requests.count, wp_content_type_v1_requests.data,
        0, null,
    };
}

#scope_file
content_type_v1_types_storage: []*wl_interface;

wp_content_type_manager_v1_requests: [2]wl_message;

wp_content_type_v1_requests: [2]wl_message;
