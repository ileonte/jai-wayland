/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: keystate
 */

org_kde_kwin_keystate :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_keystate_interface: wl_interface;

org_kde_kwin_keystate_key_constants :: enum {
    key_capslock   :: 0;
    key_numlock    :: 1;
    key_scrolllock :: 2;
}

org_kde_kwin_keystate_state_constants :: enum {
    state_unlocked :: 0;
    state_latched  :: 1;
    state_locked   :: 2;
}

org_kde_kwin_keystate_set_user_data :: inline (self: *org_kde_kwin_keystate, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_keystate_get_user_data :: inline (self: *org_kde_kwin_keystate) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_keystate_get_version :: (self: *org_kde_kwin_keystate) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_keystate_fetchStates_req :: inline (self: *org_kde_kwin_keystate) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_KEYSTATE_FETCHSTATES,
        null, wl_proxy_get_version(self), 0);
}

org_kde_kwin_keystate_destroy_req :: inline (self: *org_kde_kwin_keystate) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_KEYSTATE_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}
org_kde_kwin_keystate_add_listener :: inline (self: *org_kde_kwin_keystate, listener: *org_kde_kwin_keystate_listener, data: *void) -> s32 #c_call {
    return wl_proxy_add_listener(self, cast(*generic_c_call) listener, data);
}

ORG_KDE_KWIN_KEYSTATE_FETCHSTATES        : u32 : 0;
ORG_KDE_KWIN_KEYSTATE_DESTROY            : u32 : 1;
ORG_KDE_KWIN_KEYSTATE_FETCHSTATES_SINCE  : u32 : 1;
ORG_KDE_KWIN_KEYSTATE_DESTROY_SINCE      : u32 : 4;
ORG_KDE_KWIN_KEYSTATE_STATECHANGED_SINCE : u32 : 1;

org_kde_kwin_keystate_listener :: struct {
    stateChanged: #type (data: *void,
        self: *org_kde_kwin_keystate,
        key: u32,
        state: u32) -> void #c_call;
}


#scope_module
keystate_protocol_init :: () {
    keystate_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* EVENT: org_kde_kwin_keystate::stateChanged */
        null,  // 1
        null,  // 2
    ];

    org_kde_kwin_keystate_requests[0] = .{"fetchStates", "", keystate_types_storage.data + 0};
    org_kde_kwin_keystate_requests[1] = .{"destroy", "", keystate_types_storage.data + 0};
    org_kde_kwin_keystate_events[0] = .{"stateChanged", "uu", keystate_types_storage.data + 0};
    org_kde_kwin_keystate_interface = .{
        "org_kde_kwin_keystate", 4,
        org_kde_kwin_keystate_requests.count, org_kde_kwin_keystate_requests.data,
        org_kde_kwin_keystate_events.count, org_kde_kwin_keystate_events.data,
    };
}

#scope_file
keystate_types_storage: []*wl_interface;

org_kde_kwin_keystate_requests: [2]wl_message;
org_kde_kwin_keystate_events  : [1]wl_message;
