/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: appmenu
 */

org_kde_kwin_appmenu_manager :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_appmenu_manager_interface: wl_interface;

org_kde_kwin_appmenu_manager_set_user_data :: inline (self: *org_kde_kwin_appmenu_manager, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_appmenu_manager_get_user_data :: inline (self: *org_kde_kwin_appmenu_manager) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_appmenu_manager_get_version :: (self: *org_kde_kwin_appmenu_manager) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_appmenu_manager_destroy :: inline (self: *org_kde_kwin_appmenu_manager) #c_call {
    wl_proxy_destroy(self);
}

org_kde_kwin_appmenu_manager_create_req :: inline (self: *org_kde_kwin_appmenu_manager, surface: *wl_surface) -> *org_kde_kwin_appmenu #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_APPMENU_MANAGER_CREATE,
        *org_kde_kwin_appmenu_interface, wl_proxy_get_version(self), 0,
        null, surface);
    return cast(*org_kde_kwin_appmenu) ret;
}

org_kde_kwin_appmenu :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_appmenu_interface: wl_interface;

org_kde_kwin_appmenu_set_user_data :: inline (self: *org_kde_kwin_appmenu, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_appmenu_get_user_data :: inline (self: *org_kde_kwin_appmenu) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_appmenu_get_version :: (self: *org_kde_kwin_appmenu) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_appmenu_destroy :: inline (self: *org_kde_kwin_appmenu) #c_call {
    wl_proxy_destroy(self);
}

org_kde_kwin_appmenu_set_address_req :: inline (self: *org_kde_kwin_appmenu, service_name: *u8, object_path: *u8) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_APPMENU_SET_ADDRESS,
        null, wl_proxy_get_version(self), 0,
        service_name, object_path);
}

org_kde_kwin_appmenu_release_req :: inline (self: *org_kde_kwin_appmenu) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_APPMENU_RELEASE,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

#scope_module
appmenu_protocol_init :: () {
    appmenu_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: org_kde_kwin_appmenu_manager::create */
        *org_kde_kwin_appmenu_interface,   // 1
        *wl_surface_interface,   // 2
        /* REQUEST: org_kde_kwin_appmenu::set_address */
        null,  // 3
        null,  // 4
    ];

    org_kde_kwin_appmenu_manager_requests[0] = .{"create", "no", appmenu_types_storage.data + 0};
    org_kde_kwin_appmenu_manager_interface = .{
        "org_kde_kwin_appmenu_manager", 1,
        org_kde_kwin_appmenu_manager_requests.count, org_kde_kwin_appmenu_manager_requests.data,
        0, null,
    };

    org_kde_kwin_appmenu_requests[0] = .{"set_address", "ss", appmenu_types_storage.data + 1};
    org_kde_kwin_appmenu_requests[1] = .{"release", "", appmenu_types_storage.data + 0};
    org_kde_kwin_appmenu_interface = .{
        "org_kde_kwin_appmenu", 1,
        org_kde_kwin_appmenu_requests.count, org_kde_kwin_appmenu_requests.data,
        0, null,
    };
}

#scope_file
appmenu_types_storage: []*wl_interface;

org_kde_kwin_appmenu_manager_requests: [1]wl_message;

org_kde_kwin_appmenu_requests: [2]wl_message;
