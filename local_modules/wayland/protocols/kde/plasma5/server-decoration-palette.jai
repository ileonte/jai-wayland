/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: server_decoration_palette
 */

org_kde_kwin_server_decoration_palette_manager :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_server_decoration_palette_manager_interface: wl_interface;

org_kde_kwin_server_decoration_palette_manager_set_user_data :: inline (self: *org_kde_kwin_server_decoration_palette_manager, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_server_decoration_palette_manager_get_user_data :: inline (self: *org_kde_kwin_server_decoration_palette_manager) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_server_decoration_palette_manager_get_version :: (self: *org_kde_kwin_server_decoration_palette_manager) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_server_decoration_palette_manager_destroy :: inline (self: *org_kde_kwin_server_decoration_palette_manager) #c_call {
    wl_proxy_destroy(self);
}

org_kde_kwin_server_decoration_palette_manager_create_req :: inline (self: *org_kde_kwin_server_decoration_palette_manager, surface: *wl_surface) -> *org_kde_kwin_server_decoration_palette #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SERVER_DECORATION_PALETTE_MANAGER_CREATE,
        *org_kde_kwin_server_decoration_palette_interface, wl_proxy_get_version(self), 0,
        null, surface);
    return cast(*org_kde_kwin_server_decoration_palette) ret;
}

org_kde_kwin_server_decoration_palette :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_server_decoration_palette_interface: wl_interface;

org_kde_kwin_server_decoration_palette_set_user_data :: inline (self: *org_kde_kwin_server_decoration_palette, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_server_decoration_palette_get_user_data :: inline (self: *org_kde_kwin_server_decoration_palette) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_server_decoration_palette_get_version :: (self: *org_kde_kwin_server_decoration_palette) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_server_decoration_palette_destroy :: inline (self: *org_kde_kwin_server_decoration_palette) #c_call {
    wl_proxy_destroy(self);
}

org_kde_kwin_server_decoration_palette_set_palette_req :: inline (self: *org_kde_kwin_server_decoration_palette, palette: *u8) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SERVER_DECORATION_PALETTE_SET_PALETTE,
        null, wl_proxy_get_version(self), 0,
        palette);
}

org_kde_kwin_server_decoration_palette_release_req :: inline (self: *org_kde_kwin_server_decoration_palette) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SERVER_DECORATION_PALETTE_RELEASE,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

#scope_module
server_decoration_palette_protocol_init :: () {
    server_decoration_palette_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: org_kde_kwin_server_decoration_palette_manager::create */
        *org_kde_kwin_server_decoration_palette_interface,   // 1
        *wl_surface_interface,   // 2
        /* REQUEST: org_kde_kwin_server_decoration_palette::set_palette */
        null,  // 3
    ];

    org_kde_kwin_server_decoration_palette_manager_requests[0] = .{"create", "no", server_decoration_palette_types_storage.data + 0};
    org_kde_kwin_server_decoration_palette_manager_interface = .{
        "org_kde_kwin_server_decoration_palette_manager", 1,
        org_kde_kwin_server_decoration_palette_manager_requests.count, org_kde_kwin_server_decoration_palette_manager_requests.data,
        0, null,
    };

    org_kde_kwin_server_decoration_palette_requests[0] = .{"set_palette", "s", server_decoration_palette_types_storage.data + 1};
    org_kde_kwin_server_decoration_palette_requests[1] = .{"release", "", server_decoration_palette_types_storage.data + 0};
    org_kde_kwin_server_decoration_palette_interface = .{
        "org_kde_kwin_server_decoration_palette", 1,
        org_kde_kwin_server_decoration_palette_requests.count, org_kde_kwin_server_decoration_palette_requests.data,
        0, null,
    };
}

#scope_file
server_decoration_palette_types_storage: []*wl_interface;

org_kde_kwin_server_decoration_palette_manager_requests: [1]wl_message;

org_kde_kwin_server_decoration_palette_requests: [2]wl_message;
