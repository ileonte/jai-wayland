/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: shadow
 */

org_kde_kwin_shadow_manager :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_shadow_manager_interface: wl_interface;

org_kde_kwin_shadow_manager_set_user_data :: inline (self: *org_kde_kwin_shadow_manager, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_shadow_manager_get_user_data :: inline (self: *org_kde_kwin_shadow_manager) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_shadow_manager_get_version :: (self: *org_kde_kwin_shadow_manager) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_shadow_manager_create_req :: inline (self: *org_kde_kwin_shadow_manager, surface: *wl_surface) -> *org_kde_kwin_shadow #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_MANAGER_CREATE,
        *org_kde_kwin_shadow_interface, wl_proxy_get_version(self), 0,
        null, surface);
    return cast(*org_kde_kwin_shadow) ret;
}

org_kde_kwin_shadow_manager_unset_req :: inline (self: *org_kde_kwin_shadow_manager, surface: *wl_surface) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_MANAGER_UNSET,
        null, wl_proxy_get_version(self), 0,
        surface);
}

org_kde_kwin_shadow_manager_destroy_req :: inline (self: *org_kde_kwin_shadow_manager) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_MANAGER_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

org_kde_kwin_shadow :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_shadow_interface: wl_interface;

org_kde_kwin_shadow_set_user_data :: inline (self: *org_kde_kwin_shadow, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_shadow_get_user_data :: inline (self: *org_kde_kwin_shadow) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_shadow_get_version :: (self: *org_kde_kwin_shadow) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_shadow_commit_req :: inline (self: *org_kde_kwin_shadow) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_COMMIT,
        null, wl_proxy_get_version(self), 0);
}

org_kde_kwin_shadow_attach_left_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_LEFT,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_top_left_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_TOP_LEFT,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_top_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_TOP,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_top_right_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_TOP_RIGHT,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_right_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_RIGHT,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_bottom_right_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_BOTTOM_RIGHT,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_bottom_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_BOTTOM,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_attach_bottom_left_req :: inline (self: *org_kde_kwin_shadow, buffer: *wl_buffer) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_ATTACH_BOTTOM_LEFT,
        null, wl_proxy_get_version(self), 0,
        buffer);
}

org_kde_kwin_shadow_set_left_offset_req :: inline (self: *org_kde_kwin_shadow, offset: wl_fixed_t) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_SET_LEFT_OFFSET,
        null, wl_proxy_get_version(self), 0,
        offset);
}

org_kde_kwin_shadow_set_top_offset_req :: inline (self: *org_kde_kwin_shadow, offset: wl_fixed_t) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_SET_TOP_OFFSET,
        null, wl_proxy_get_version(self), 0,
        offset);
}

org_kde_kwin_shadow_set_right_offset_req :: inline (self: *org_kde_kwin_shadow, offset: wl_fixed_t) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_SET_RIGHT_OFFSET,
        null, wl_proxy_get_version(self), 0,
        offset);
}

org_kde_kwin_shadow_set_bottom_offset_req :: inline (self: *org_kde_kwin_shadow, offset: wl_fixed_t) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_SET_BOTTOM_OFFSET,
        null, wl_proxy_get_version(self), 0,
        offset);
}

org_kde_kwin_shadow_destroy_req :: inline (self: *org_kde_kwin_shadow) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SHADOW_DESTROY,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

#scope_module
shadow_protocol_init :: () {
    shadow_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: org_kde_kwin_shadow_manager::create */
        *org_kde_kwin_shadow_interface,   // 1
        *wl_surface_interface,   // 2
        /* REQUEST: org_kde_kwin_shadow_manager::unset */
        *wl_surface_interface,   // 3
        /* REQUEST: org_kde_kwin_shadow::attach_left */
        *wl_buffer_interface,   // 4
        /* REQUEST: org_kde_kwin_shadow::attach_top_left */
        *wl_buffer_interface,   // 5
        /* REQUEST: org_kde_kwin_shadow::attach_top */
        *wl_buffer_interface,   // 6
        /* REQUEST: org_kde_kwin_shadow::attach_top_right */
        *wl_buffer_interface,   // 7
        /* REQUEST: org_kde_kwin_shadow::attach_right */
        *wl_buffer_interface,   // 8
        /* REQUEST: org_kde_kwin_shadow::attach_bottom_right */
        *wl_buffer_interface,   // 9
        /* REQUEST: org_kde_kwin_shadow::attach_bottom */
        *wl_buffer_interface,   // 10
        /* REQUEST: org_kde_kwin_shadow::attach_bottom_left */
        *wl_buffer_interface,   // 11
        /* REQUEST: org_kde_kwin_shadow::set_left_offset */
        null,  // 12
        /* REQUEST: org_kde_kwin_shadow::set_top_offset */
        null,  // 13
        /* REQUEST: org_kde_kwin_shadow::set_right_offset */
        null,  // 14
        /* REQUEST: org_kde_kwin_shadow::set_bottom_offset */
        null,  // 15
    ];

    org_kde_kwin_shadow_manager_requests[0] = .{"create", "no", shadow_types_storage.data + 0};
    org_kde_kwin_shadow_manager_requests[1] = .{"unset", "o", shadow_types_storage.data + 1};
    org_kde_kwin_shadow_manager_requests[2] = .{"destroy", "", shadow_types_storage.data + 0};
    org_kde_kwin_shadow_manager_interface = .{
        "org_kde_kwin_shadow_manager", 2,
        org_kde_kwin_shadow_manager_requests.count, org_kde_kwin_shadow_manager_requests.data,
        0, null,
    };

    org_kde_kwin_shadow_requests[0] = .{"commit", "", shadow_types_storage.data + 0};
    org_kde_kwin_shadow_requests[1] = .{"attach_left", "o", shadow_types_storage.data + 3};
    org_kde_kwin_shadow_requests[2] = .{"attach_top_left", "o", shadow_types_storage.data + 4};
    org_kde_kwin_shadow_requests[3] = .{"attach_top", "o", shadow_types_storage.data + 5};
    org_kde_kwin_shadow_requests[4] = .{"attach_top_right", "o", shadow_types_storage.data + 6};
    org_kde_kwin_shadow_requests[5] = .{"attach_right", "o", shadow_types_storage.data + 7};
    org_kde_kwin_shadow_requests[6] = .{"attach_bottom_right", "o", shadow_types_storage.data + 8};
    org_kde_kwin_shadow_requests[7] = .{"attach_bottom", "o", shadow_types_storage.data + 9};
    org_kde_kwin_shadow_requests[8] = .{"attach_bottom_left", "o", shadow_types_storage.data + 10};
    org_kde_kwin_shadow_requests[9] = .{"set_left_offset", "f", shadow_types_storage.data + 11};
    org_kde_kwin_shadow_requests[10] = .{"set_top_offset", "f", shadow_types_storage.data + 12};
    org_kde_kwin_shadow_requests[11] = .{"set_right_offset", "f", shadow_types_storage.data + 13};
    org_kde_kwin_shadow_requests[12] = .{"set_bottom_offset", "f", shadow_types_storage.data + 14};
    org_kde_kwin_shadow_requests[13] = .{"destroy", "", shadow_types_storage.data + 0};
    org_kde_kwin_shadow_interface = .{
        "org_kde_kwin_shadow", 2,
        org_kde_kwin_shadow_requests.count, org_kde_kwin_shadow_requests.data,
        0, null,
    };
}

#scope_file
shadow_types_storage: []*wl_interface;

org_kde_kwin_shadow_manager_requests: [3]wl_message;

org_kde_kwin_shadow_requests: [14]wl_message;
