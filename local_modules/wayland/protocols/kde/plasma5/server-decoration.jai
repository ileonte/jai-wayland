/*
 * Auto-generated by `wayland-scanner` version 1.0.1
 * Protocol: server_decoration
 */

org_kde_kwin_server_decoration_manager :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_server_decoration_manager_interface: wl_interface;

org_kde_kwin_server_decoration_manager_mode_constants :: enum {
    mode_None   :: 0;
    mode_Client :: 1;
    mode_Server :: 2;
}

org_kde_kwin_server_decoration_manager_set_user_data :: inline (self: *org_kde_kwin_server_decoration_manager, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_server_decoration_manager_get_user_data :: inline (self: *org_kde_kwin_server_decoration_manager) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_server_decoration_manager_get_version :: (self: *org_kde_kwin_server_decoration_manager) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_server_decoration_manager_destroy :: inline (self: *org_kde_kwin_server_decoration_manager) #c_call {
    wl_proxy_destroy(self);
}

org_kde_kwin_server_decoration_manager_create_req :: inline (self: *org_kde_kwin_server_decoration_manager, surface: *wl_surface) -> *org_kde_kwin_server_decoration #c_call {
    ret: *wl_proxy = wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_CREATE,
        *org_kde_kwin_server_decoration_interface, wl_proxy_get_version(self), 0,
        null, surface);
    return cast(*org_kde_kwin_server_decoration) ret;
}

org_kde_kwin_server_decoration_manager_add_listener :: inline (self: *org_kde_kwin_server_decoration_manager, listener: *org_kde_kwin_server_decoration_manager_listener, data: *void) -> s32 #c_call {
    return wl_proxy_add_listener(self, cast(*generic_c_call) listener, data);
}

ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_CREATE             : u32 : 0;
ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_CREATE_SINCE       : u32 : 1;
ORG_KDE_KWIN_SERVER_DECORATION_MANAGER_DEFAULT_MODE_SINCE : u32 : 1;

org_kde_kwin_server_decoration_manager_listener :: struct {
    default_mode: #type (data: *void,
        self: *org_kde_kwin_server_decoration_manager,
        mode: u32) -> void #c_call;
}

org_kde_kwin_server_decoration :: struct { #as _proxy: wl_proxy; }
org_kde_kwin_server_decoration_interface: wl_interface;

org_kde_kwin_server_decoration_mode_constants :: enum {
    mode_None   :: 0;
    mode_Client :: 1;
    mode_Server :: 2;
}

org_kde_kwin_server_decoration_set_user_data :: inline (self: *org_kde_kwin_server_decoration, user_data: *void) #c_call {
    wl_proxy_set_user_data(self, user_data);
}

org_kde_kwin_server_decoration_get_user_data :: inline (self: *org_kde_kwin_server_decoration) -> *void #c_call {
    return wl_proxy_get_user_data(self);
}

org_kde_kwin_server_decoration_get_version :: (self: *org_kde_kwin_server_decoration) -> u32 #c_call {
    return wl_proxy_get_version(self);
}

org_kde_kwin_server_decoration_destroy :: inline (self: *org_kde_kwin_server_decoration) #c_call {
    wl_proxy_destroy(self);
}

org_kde_kwin_server_decoration_release_req :: inline (self: *org_kde_kwin_server_decoration) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SERVER_DECORATION_RELEASE,
        null, wl_proxy_get_version(self), WL_MARSHAL_FLAG_DESTROY);
}

org_kde_kwin_server_decoration_request_mode_req :: inline (self: *org_kde_kwin_server_decoration, mode: u32) #c_call {
    wl_proxy_marshal_flags(
        self, ORG_KDE_KWIN_SERVER_DECORATION_REQUEST_MODE,
        null, wl_proxy_get_version(self), 0,
        mode);
}
org_kde_kwin_server_decoration_add_listener :: inline (self: *org_kde_kwin_server_decoration, listener: *org_kde_kwin_server_decoration_listener, data: *void) -> s32 #c_call {
    return wl_proxy_add_listener(self, cast(*generic_c_call) listener, data);
}

ORG_KDE_KWIN_SERVER_DECORATION_RELEASE            : u32 : 0;
ORG_KDE_KWIN_SERVER_DECORATION_REQUEST_MODE       : u32 : 1;
ORG_KDE_KWIN_SERVER_DECORATION_RELEASE_SINCE      : u32 : 1;
ORG_KDE_KWIN_SERVER_DECORATION_REQUEST_MODE_SINCE : u32 : 1;
ORG_KDE_KWIN_SERVER_DECORATION_MODE_SINCE         : u32 : 1;

org_kde_kwin_server_decoration_listener :: struct {
    mode: #type (data: *void,
        self: *org_kde_kwin_server_decoration,
        mode: u32) -> void #c_call;
}


#scope_module
server_decoration_protocol_init :: () {
    server_decoration_types_storage = .[
        /* __DUMMY__ */
        null,  // 0
        /* REQUEST: org_kde_kwin_server_decoration_manager::create */
        *org_kde_kwin_server_decoration_interface,   // 1
        *wl_surface_interface,   // 2
        /* EVENT: org_kde_kwin_server_decoration_manager::default_mode */
        null,  // 3
        /* REQUEST: org_kde_kwin_server_decoration::request_mode */
        null,  // 4
        /* EVENT: org_kde_kwin_server_decoration::mode */
        null,  // 5
    ];

    org_kde_kwin_server_decoration_manager_requests[0] = .{"create", "no", server_decoration_types_storage.data + 0};
    org_kde_kwin_server_decoration_manager_events[0] = .{"default_mode", "u", server_decoration_types_storage.data + 1};
    org_kde_kwin_server_decoration_manager_interface = .{
        "org_kde_kwin_server_decoration_manager", 1,
        org_kde_kwin_server_decoration_manager_requests.count, org_kde_kwin_server_decoration_manager_requests.data,
        org_kde_kwin_server_decoration_manager_events.count, org_kde_kwin_server_decoration_manager_events.data,
    };

    org_kde_kwin_server_decoration_requests[0] = .{"release", "", server_decoration_types_storage.data + 0};
    org_kde_kwin_server_decoration_requests[1] = .{"request_mode", "u", server_decoration_types_storage.data + 3};
    org_kde_kwin_server_decoration_events[0] = .{"mode", "u", server_decoration_types_storage.data + 4};
    org_kde_kwin_server_decoration_interface = .{
        "org_kde_kwin_server_decoration", 1,
        org_kde_kwin_server_decoration_requests.count, org_kde_kwin_server_decoration_requests.data,
        org_kde_kwin_server_decoration_events.count, org_kde_kwin_server_decoration_events.data,
    };
}

#scope_file
server_decoration_types_storage: []*wl_interface;

org_kde_kwin_server_decoration_manager_requests: [1]wl_message;
org_kde_kwin_server_decoration_manager_events  : [1]wl_message;

org_kde_kwin_server_decoration_requests: [2]wl_message;
org_kde_kwin_server_decoration_events  : [1]wl_message;
